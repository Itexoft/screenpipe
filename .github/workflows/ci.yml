name: CI

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  ORT_STRATEGY: download
  RUSTFLAGS: ""

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Metadata
        if: runner.os != 'Windows'
        run: cargo metadata --format-version 1 | jq -r '.packages[].name'

      - name: Metadata (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          (cargo metadata --format-version 1) | ConvertFrom-Json | % packages | % name

      - name: Configure FFmpeg
        if: runner.os == 'macOS'
        run: |
          echo "PKG_CONFIG_PATH=$(brew --prefix ffmpeg)/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          pkg-config --exists libavcodec
          pkg-config --exists libavformat

      - name: Clean
        if: runner.os == 'Windows'
        run: cargo clean -p screenpipe-vision

      - name: Build
        run: cargo build --workspace --all-targets --verbose

      - name: Test
        run: cargo test --workspace --verbose

      - name: Toolchain info
        if: always()
        run: |
          rustc -vV
          cargo -V

      - name: cl.exe info (best-effort)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $cl = (Get-Command cl.exe -ErrorAction SilentlyContinue)
          if ($cl) { & $cl.Source /Bv } else { Write-Host "cl.exe not on PATH, skipping" }

